line 388 : dim3 dimGrid1((mc + TILE_DIM - 1) / TILE_DIM, (nc + TILE_DIM - 1) / TILE_DIM); -> dim3 dimGrid1((nc + TILE_DIM - 1) / TILE_DIM, (mc + TILE_DIM - 1) / TILE_DIM);

line 416 : sigma[i*M + i] = (double)sqrt(evals[i].first); -> sigma[i] = (double)sqrt(evals[i].first); 

line 417 : sigma_inv[i*M+i] = 1/(double)sqrt(evals[i].first); -> sigma_inv[i*N+i] = 1/(double)sqrt(evals[i].first); 

line 430 : host_matrix_multiply(M, N, sigma_inv, N, N, UT, M, N, v_temp); -> host_matrix_multiply(N, M, sigma_inv, N, N, UT, N, M, v_temp); 

line 432 : host_matrix_multiply( M, N, v_temp, N, M, dT, M, M, VT); -> host_matrix_multiply( N, M, v_temp, M, N, dT, M, M, VT); 

line 441 : eval_sum += sigma[i*M+i]; -> eval_sum += (sigma[i])*(sigma[i]);

line 448: eval_sum_check += sigma[i*M+i]; -> eval_sum_check += (sigma[i])*(sigma[i]); 

line 540 : *SIGMA = (double*) calloc(N*M, sizeof(double)); -> *SIGMA = (double*) calloc(N*1, sizeof(double)); 

line 567 : K = k -> *K = *k; 

link to file: https://raw.githubusercontent.com/Maderana/pca_with_cuda/master/lab3_cuda.cu